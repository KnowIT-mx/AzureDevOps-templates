parameters:
  - name: webApp
    type: string

  - name: projectName
    type: string

  - name: runtime
    type: string
    default: 'DOTNET|5.0'

  - name: appSettings
    type: string
    default: ''

  - name: appServicePlan
    type: string
    default: ''

  - name: targetEnvironment
    type: string
    values:
      - dev
      - prod
      - qa
    default: dev

  - name: azureLocation
    type: string

  - name: azureConnection
    type: string

stages:
- stage: ${{ format('DeployWebApp_{0}', upper(parameters.targetEnvironment)) }}

  variables:
    prefix: ${{ format('{0}-', parameters.targetEnvironment) }}
    ${{ if eq(parameters.targetEnvironment, 'prod') }}:
      prefix: ''

    WebApp.ServicePlan: ${{ coalesce(parameters.appServicePlan, format('ASP-{0}-{1}', parameters.projectName, parameters.targetEnvironment)) }}
    WebApp.Name: ${{ format('{0}{1}', variables.prefix, parameters.webApp) }}
    Azure.Location: ${{ parameters.azureLocation }}
    Azure.ResourceGroup: ${{ format('{0}{1}', variables.prefix, parameters.projectName) }}

  jobs:
  - deployment: deployWebAppJob
    displayName: Provision and deploy to Azure AppService
    environment: ${{ format('{0}-{1}', parameters.webApp, parameters.targetEnvironment) }}

    strategy:
      runOnce:
        deploy:
          steps:

          - checkout: templates
            path: templates

          - task: CopyFiles@2
            displayName: Add repository custom scripts
            inputs:
              sourceFolder: $(Pipeline.Workspace)/drop
              contents: 'deploy/**'
              targetFolder: $(Pipeline.Workspace)/templates
              overwrite: true

          - task: AzureCLI@2
            displayName: Provisioning WebApp Service
            inputs:
              azureSubscription: ${{ parameters.azureConnection }}
              scriptType: pscore
              scriptLocation: scriptPath
              scriptPath: '$(Pipeline.Workspace)/templates/deploy/webapp.ps1'
            env:
              RUNTIME: ${{ parameters.runtime }}
              #CONN_STRING: $(netcore.connectionString)

          - task: AzureWebApp@1
            displayName: Deploy WebApp
            inputs:
              azureSubscription: ${{ parameters.azureConnection }}
              appName: $(WebApp.Name)
              appType: webAppLinux
              ##runtimeStack: ${{ parameters.runtime }}
              appSettings: ${{ parameters.appSettings }}
              package: $(Pipeline.Workspace)/drop/*.zip
