parameters:
  - name: AzureConnection
    type: string

  - name: WebApp
    type: string

  - name: Slot
    type: string

  - name: TargetEnvironment
    type: string
    values:
      - dev
      - prod
    default: prod

stages:
- stage: ${{ format('DeployWebApp_{0}', upper(parameters.TargetEnvironment)) }}

  variables:
    Azure.Subscription: ${{ parameters.AzureConnection }}
    webApp: ${{ format('{0}-{1}', parameters.WebApp, parameters.TargetEnvironment) }}
    webApp.slot: ${{ parameters.Slot }}

  jobs:
  - deployment: deployWebAppJob
    displayName: Provision and deploy to Azure AppService
    environment: ${{ format('{0}-{1}', parameters.WebApp, parameters.TargetEnvironment) }}
    strategy:
      runOnce:
        deploy:
          steps:

          - checkout: templates
            path: templates

          - task: CopyFiles@2
            displayName: Add repository custom scripts
            inputs:
              sourceFolder: $(Pipeline.Workspace)/drop
              contents: 'deploy/**'
              targetFolder: $(Pipeline.Workspace)/templates
              overwrite: true

          - task: AzureCLI@2
            displayName: Provisioning WebApp Service
            inputs:
              azureSubscription: ${{ parameters.AzureConnection }}
              scriptType: pscore
              scriptLocation: scriptPath
              scriptPath: '$(Pipeline.Workspace)/templates/deploy/webapp.ps1'

          - task: AzureWebApp@1
            displayName: Deploy WebApp
            inputs:
              azureSubscription: ${{ parameters.AzureConnection }}
              appName: $(webApp)
              appType: webAppLinux
              ${{ if parameters.Slot }}:
                deployToSlotOrASE: true
                slotName: ${{ parameters.Slot }}
              runtimeStack: DOTNETCORE|$(netcore.version)
              appSettings: $(netcore.appSettings)
              package: $(Pipeline.Workspace)/drop/*.zip
